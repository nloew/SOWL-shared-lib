{"name":"SwitchLights","permission":{"default":0,"n8FF00qYKJUrk34v":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.fbGq1if8sepMKr0j"}},"scope":"global","command":"//console.log(token)\n//.data.actorData.name+\"  \"+args\n\nvar triggeractor = token.data.actorData.name\nvar triggerlight = args\n\nif (triggeractor == triggerlight ) {\n   game.LightSwitch.flipTheSwitchGM(args)\n}","author":"n8FF00qYKJUrk34v","img":"modules/SOWL-shared-lib/assets/SOWL.svg","actorIds":[],"_id":"9iBVvMaH1UZ54vtx"}
{"name":"SOWL_checkRingPuzzle","permission":{"default":0,"n8FF00qYKJUrk34v":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.PuGazHjl4Uu2bbuc"}},"scope":"global","command":"console.clear();\nlet myTokens = game.SOWL._getAllNamedTokens();\nvar largeRing = myTokens.filter(x => x.data.actorData.name.includes(\"largeRing\"))[0];\nvar mediumRing = myTokens.filter(x => x.data.actorData.name.includes(\"mediumRing\"))[0];\nvar smallRing = myTokens.filter(x => x.data.actorData.name.includes(\"smallRing\"))[0];\nvar largeRingController = myTokens.filter(x => x.data.actorData.name.includes(\"SOWL_RingPuzzle_1\"))[0];\nvar mediumRingController = myTokens.filter(x => x.data.actorData.name.includes(\"SOWL_RingPuzzle_2\"))[0];\nvar smallRingController = myTokens.filter(x => x.data.actorData.name.includes(\"SOWL_RingPuzzle_3\"))[0];\nvar SOWL_Controller = myTokens.filter(x => x.data.actorData.name.includes(\"SOWL_Controller\"))[0];\nlet rotateSpeed = 50;\nconsole.log(SOWL_Controller.data.flags.SOWL);\n//console.log(SOWL_Controller.data);\n//console.log(game.SOWL_RingPuzzle1);\ngame.SOWL._puzzleController = SOWL_Controller;  \n//SOWL_Controller.data.flags[\"SOWL\"][\"allowCheck\"] = true;\n//SOWL_ResetPuzzle()\n\nif (typeof (SOWL_Controller.data.flags[\"SOWL\"]) == \"undefined\") {\n    console.log(\"SOWL Rotate Puzzle INIT\");\n    SOWL_Controller.data.flags[\"SOWL\"] = [];\n    SOWL_Controller.data.flags[\"SOWL\"][\"solved\"] = false;\n    SOWL_Controller.data.flags[\"SOWL\"][\"puzzlecounter\"] = 1;\n    SOWL_Controller.data.flags[\"SOWL\"][\"allowCheck\"] = true\n}\n\nfunction SOWL_ResetPuzzle() {\n    console.log(\"SOWL Ring Puzzle: RESET CALLED\");\n    game.SOWL._SOWL_rotateMeTo(largeRingController, 0, rotateSpeed);\n    game.SOWL._SOWL_rotateMeTo(mediumRingController, 0, rotateSpeed);\n    game.SOWL._SOWL_rotateMeTo(smallRingController, 0, rotateSpeed);\n    SOWL_Controller.data.flags[\"SOWL\"][\"puzzlecounter\"] = 1;\n    SOWL_Controller.data.flags[\"SOWL\"][\"solved\"] = false;\n    SOWL_Controller.data.flags[\"SOWL\"][\"allowCheck\"] = false;\n    game.LightSwitch.flipTheSwitchGM(\"ringPuzzleReset\")\n    game.SOWL_RingPuzzle1._SOWL_resetPuzzleTrigger();\n    //game.togglePause(true, true);\n    //game.LightSwitch.flipTheSwitchGM(\"ringPuzzleSolved\");\n}\n\nfunction SOWLTestHook(target) {\n    //console.log(\"Hook called\");\n    //console.log(target.data.flags[\"SOWL\"]);\n    //target.data.flags[\"SOWL\"][\"allowCheck\"] = true;\n    //game.togglePause(false, true);\n}\n\nfunction SOWL_CheckSolved() {\n    console.log(SOWL_Controller.data.flags[\"SOWL\"][\"puzzlecounter\"])\n    if (!SOWL_Controller.data.flags[\"SOWL\"][\"allowCheck\"]) { return; }\n    SOWL_Controller.data.flags[\"SOWL\"][\"puzzlecounter\"]++;\n    console.log(\"SOWL Ring Puzzle: Check\");\n    if (Math.round(smallRing.x) === Math.round(mediumRing.x) && (Math.round(mediumRing.x) === Math.round(largeRing.x))) {\n        console.log(\"SOWL Ring Puzzle: SOLVED\");\n        SOWL_Controller.data.flags[\"SOWL\"][\"solved\"] = true\n        game.LightSwitch.flipTheSwitchGM(\"ringPuzzleSolved\")\n        game.togglePause(false, true);\n    } else {\n     SOWL_ResetPuzzle()\n    }\n}\nconsole.log(smallRing.x);\nconsole.log(mediumRing.x);\nconsole.log(largeRing.x);\nif (args[0] == \"reset\") {\n    game.LightSwitch.flipTheSwitchGM(\"ringPuzzleSolved\")\n    SOWL_ResetPuzzle()\n} else {\n    SOWL_CheckSolved();\n}","author":"n8FF00qYKJUrk34v","img":"modules/SOWL-shared-lib/assets/SOWL.svg","actorIds":[],"_id":"HWaAHyiM9U5Xu3K1"}
{"name":"SOWL_rotateEntity","permission":{"default":0,"n8FF00qYKJUrk34v":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.tw3JNU3xuXV9Su8I"}},"scope":"global","command":"console.clear();\nif(game.paused){return;}\n//console.log(args);\nif (args[0] == undefined) { var args = [\"SOWL_Controller\"] };\nif (args[1] == undefined) { args.push(\"rotateBy\") };\nif (args[2] == undefined) { args.push(\"90\") };\nif (args[3] == undefined) { args.push(\"tokens\") };\nif (args[4] == undefined) { args.push(\"50\") };\n\nvar target = args[0];\nvar rotateMode = args[1];\nvar degrees = args[2];\nvar mode = args[3];\nvar rotateSpeed = args[4];\n\n\nif (mode == \"tokens\") {\n   var myTokens = game.SOWL._getAllNamedTokens();\n} else {\n   var myTokens = game.SOWL._getAllTiles();\n}\n\nconsole.log(myTokens)\n\nlet SOWLtarget = myTokens.filter(x => x.data.actorData.name.includes(target))[0];\n//console.log(SOWLtarget)\n\nif (rotateMode == \"rotateBy\") {\n    game.SOWL._SOWL_rotateTokenBy(SOWLtarget, degrees , rotateSpeed);\n} else if (rotateMode == \"rotateTo\") {\n   game.SOWL._SOWL_rotateMeTo(SOWLtarget, degrees, rotateSpeed);\n}","author":"n8FF00qYKJUrk34v","img":"modules/SOWL-shared-lib/assets/SOWL.svg","actorIds":[],"_id":"wa9Uklm4Vix9IjGN"}
